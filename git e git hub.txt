INICIALIZAR REPOSITÓRIO:
-cria uma nova pasta
-git bash here(botão direito)

ADICIONAR ARQUIVOS DE CONTROLE:
-git add .

CRIAR VERSÃO DO CÓDIGO COM COMMIT:
-git commit -m "nome da versão"

ENVIANDO PARA NUVEM:
-git push link

ATUALIZAÇÃO DO CÓDIGO:
-depois de alterar
-git add .
-git status
-git commit -m "o que foi adicionado"
-git push

VERIFICAR O HISTÓRICO DE ATUALIZAÇÃO:
-git reflog

NAVEGANDO ENTRE AS VERSÕES DO CÓDIGO:
-git reset --hard número do id(vai voltar uma outra versão)
-usar o git reflog pra ver quais versões existem

BRANCHS:
-ter um branch estável e outras separadas
-git branch(ver quais branchs existem na pasta)
-git branch nome(criar uma nova branch)
-git branch(a verde é a que está sendo usada)
-git checkout nome(mudar para a branch chamada "nome")
-git status
-git add .
-essa modificação foi feita na branch nome(ela não pega nas outras)
-git commit -m "modificação"
-git status
-git push (quando for numa branch nova pega o comando e cola)
-vai upar no git hub atualizado naquela branch

GIT MERGE(levar uma branch pra outra):
-git merge nome da branch(colocar as coisas de nome na branch que está sendo usada)
-git push
-sempre que entrar na branch principal
-antes de fazer o merge
-deve fazer atualizações
-git pull (atualiza as coisas)
-ai tu faz o merge

-esquema:
1.git pull da branch principal
2.gerar uma nova branch a partir da branch principal
3.trabalhar e adicionar novas funcionalidades na nova branch que criou
4.finalizar o trabalho na branch temporária
5.git checkout na branch principal
6.git pull
7.Mergiar(unir) o código da branch temporário com a branch principal(depois de testar)
8.git push da branch principal